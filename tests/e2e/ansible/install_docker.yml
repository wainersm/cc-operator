# Copyright Confidential Containers Contributors
#
# SPDX-License-Identifier: Apache-2.0
#
# Install docker on the host as it is used to build the operator.
#
---
# It assume that if docker is installed then it is proper configure so it
# doesn't do anything else. This is likely true when running on baremetal
# machines.
- name: Check docker is installed
  shell: command -v docker >/dev/null 2>&1
  register: docker_exist
  ignore_errors: yes
- name: Handle docker installation on Ubuntu
  block:
    - name: Install docker dependencies
      package:
        name:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
    - name: Add docker repo GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        keyring: /etc/apt/trusted.gpg.d/docker.gpg
        state: present
    - name: Add docker repo
      apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable"
        filename: docker
        update_cache: yes
        state: present
    - name: Install docker packages
      package:
        name:
          - containerd.io
          - docker-ce
          - docker-ce-cli
        state: present
    - name: Create the docker group
      group:
        name: docker
        state: present
      # TODO: add regular non-root users to docker group
  when: docker_exist.rc != 0 and ansible_distribution == "Ubuntu"
- name: Handle docker installation on CentOS.
  block:
    - name: Install yum-utils
      dnf:
        name: yum-utils
        state: present
    - name: Add docker yum repo
      shell: yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
      args:
        creates: /etc/yum.repos.d/docker-ce.repo
    - name: Install docker packages
      dnf:
        name:
          - containerd.io
          - docker-ce
          - docker-ce-cli
        state: present
    - name: Start docker service
      service:
        name: docker
        enabled: yes
        state: started
  when: docker_exist.rc != 0 and ansible_distribution == "CentOS"
